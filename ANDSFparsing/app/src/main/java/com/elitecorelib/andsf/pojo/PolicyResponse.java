package com.elitecorelib.andsf.pojo;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.4.2
//
// Created by Quasar Development at 04-03-2015
//
//---------------------------------------------------


import java.io.Serializable;
import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;

import org.ksoap2.serialization.PropertyInfo;

public class PolicyResponse extends AttributeContainer implements KvmSerializable,Serializable
{
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public ArrayList<DiscoveryInformation>discoveryInformation =new ArrayList<DiscoveryInformation>();
    
    public ArrayList<Policy>policy =new ArrayList<Policy>();
    
    public String resultCode;

    /*public void viewDiscoveryInformation(ArrayList<DiscoveryInformation> discoveryInformation){
        System.out.println("DISCOVERY INFORMATION\n");
        System.out.println(discoveryInformation);
        System.out.println("\n");
        System.out.println("\n");

    }

    public void viewPolicyInformation(ArrayList<Policy> policy){
        System.out.println("POLICY\n");
        System.out.println(policy);
        System.out.println("\n");
        System.out.println("\n");

    } */

    public PolicyResponse ()
    {
    }



    public PolicyResponse (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;

        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("discoveryInformation"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.discoveryInformation = new ArrayList<DiscoveryInformation>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("discoveryInformation"))
	            {
                    java.lang.Object j =info.getValue();
	                DiscoveryInformation j1= (DiscoveryInformation)__envelope.get(j,DiscoveryInformation.class);
	                this.discoveryInformation.add(j1);

	            }
	        }

            //PolicyInformation.getPolicyInformation().setDiscoveryInformation(this.discoveryInformation);
            //viewDiscoveryInformation(this.discoveryInformation);

        }
        if (soapObject.hasProperty("policy"))
        {	
	        int size = soapObject.getPropertyCount();
	        this.policy = new ArrayList<Policy>();
	        for (int i0=0;i0< size;i0++)
	        {
	            PropertyInfo info=new PropertyInfo();
	            soapObject.getPropertyInfo(i0, info);
                java.lang.Object obj = info.getValue();
	            if (obj!=null && info.name.equals("policy"))
	            {
                    java.lang.Object j =info.getValue();
	                Policy j1= (Policy)__envelope.get(j,Policy.class);
	                this.policy.add(j1);
	            }
	        }
            //viewPolicyInformation(this.policy);
//            PolicyInformation.getPolicyInformation().evaluatePolicy(this.policy);




        }
        if (soapObject.hasProperty("resultCode"))
        {	
	        java.lang.Object obj = soapObject.getProperty("resultCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.resultCode = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.resultCode = (String)obj;
            }    
        }


    }



    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.resultCode!=null?this.resultCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=+1 && propertyIndex< + 1+this.discoveryInformation.size())
        {
            return this.discoveryInformation.get(propertyIndex-(+1));
        }
        if(propertyIndex>=+1+this.discoveryInformation.size() && propertyIndex< + 1+this.discoveryInformation.size()+this.policy.size())
        {
            return this.policy.get(propertyIndex-(+1+this.discoveryInformation.size()));
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1+discoveryInformation.size()+policy.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "resultCode";
            info.namespace= "";
        }
        if(propertyIndex>=+1 && propertyIndex <= +1+this.discoveryInformation.size())
        {
            info.type = DiscoveryInformation.class;
            info.name = "discoveryInformation";
            info.namespace= "";
        }
        if(propertyIndex>=+1+this.discoveryInformation.size() && propertyIndex <= +1+this.discoveryInformation.size()+this.policy.size())
        {
            info.type = Policy.class;
            info.name = "policy";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    @Override
    public String getInnerText() {
        return null;
    }

    @Override
    public void setInnerText(String s) {

    }
}
